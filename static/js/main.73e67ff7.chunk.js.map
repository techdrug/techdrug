{"version":3,"sources":["assets/img/hero-img.png","Components/header.jsx","Components/pages/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","id","className","href","src","alt","React","Component","Home","data-aos","data-aos-delay","data-vbtype","data-autoplay","sideImage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,sC,mNCiD5BC,E,uKA7CX,OACE,4BAAQC,GAAG,SAASC,UAAU,cAC9B,yBAAKA,UAAU,uCAEf,wBAAIA,UAAU,gBAAe,uBAAGC,KAAK,cAAR,cAE5B,uBAAGA,KAAK,IAAID,UAAU,gBAAe,yBAAKE,IAAI,sBAAsBC,IAAI,GAAGH,UAAU,eAEpF,yBAAKA,UAAU,8BACb,4BACE,wBAAIA,UAAU,UAAS,uBAAGC,KAAK,cAAR,SACvB,4BAAI,uBAAGA,KAAK,UAAR,UACJ,4BAAI,uBAAGA,KAAK,aAAR,aACJ,4BAAI,uBAAGA,KAAK,cAAR,cACJ,4BAAI,uBAAGA,KAAK,SAAR,SACJ,wBAAID,UAAU,aAAY,uBAAGC,KAAK,IAAR,aACxB,4BACE,4BAAI,uBAAGA,KAAK,KAAR,gBACJ,wBAAID,UAAU,aAAY,uBAAGC,KAAK,KAAR,kBACxB,4BACE,4BAAI,uBAAGA,KAAK,KAAR,qBACJ,4BAAI,uBAAGA,KAAK,KAAR,qBACJ,4BAAI,uBAAGA,KAAK,KAAR,qBACJ,4BAAI,uBAAGA,KAAK,KAAR,qBACJ,4BAAI,uBAAGA,KAAK,KAAR,uBAGR,4BAAI,uBAAGA,KAAK,KAAR,gBACJ,4BAAI,uBAAGA,KAAK,KAAR,gBACJ,4BAAI,uBAAGA,KAAK,KAAR,kBAGR,4BAAI,uBAAGA,KAAK,YAAR,cAKR,uBAAGA,KAAK,SAASD,UAAU,4BAA3B,qB,GAvCaI,IAAMC,W,gBCyBZC,E,uKAtBX,OACQ,6BAASP,GAAG,OAAOC,UAAU,6BACrB,yBAAKA,UAAU,aACnB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,0GAA0GO,WAAS,UAAUC,iBAAe,OAC3J,kEACA,gGACA,yBAAKR,UAAU,aACX,uBAAGC,KAAK,SAASD,UAAU,4BAA3B,eACA,uBAAGC,KAAK,8CAA8CD,UAAU,oCAAoCS,cAAY,QAAQC,gBAAc,QAAtI,gBAA0J,uBAAGV,UAAU,0BAG3K,yBAAKA,UAAU,4DAA4DO,WAAS,UAAUC,iBAAe,OAC7G,yBAAKN,IAAKS,IAAWX,UAAU,qBAAqBG,IAAI,a,GAfzDC,IAAMC,WCYVO,MATf,WACE,OACE,yBAAKZ,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEca,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.73e67ff7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero-img.fdff2e0c.png\";","import React from 'react'\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n    \t <header id=\"header\" className=\"fixed-top \">\n\t\t    <div className=\"container d-flex align-items-center\">\n\n\t    \t<h1 className=\"logo mr-auto\"><a href=\"index.html\">Tech Drug</a></h1>\n\t\t     \n     \t\t<a href=\"#\" className=\"logo mr-auto\"><img src=\"assets/img/logo.png\" alt=\"\" className=\"img-fluid\"/></a>\n\n\t\t      <nav className=\"nav-menu d-none d-lg-block\">\n\t\t        <ul>\n\t\t          <li className=\"active\"><a href=\"index.html\">Home</a></li>\n\t\t          <li><a href=\"#about\">About</a></li>\n\t\t          <li><a href=\"#services\">Services</a></li>\n\t\t          <li><a href=\"#portfolio\">Portfolio</a></li>\n\t\t          <li><a href=\"#team\">Team</a></li>\n\t\t          <li className=\"drop-down\"><a href=\"\">Drop Down</a>\n\t\t            <ul>\n\t\t              <li><a href=\"#\">Drop Down 1</a></li>\n\t\t              <li className=\"drop-down\"><a href=\"#\">Deep Drop Down</a>\n\t\t                <ul>\n\t\t                  <li><a href=\"#\">Deep Drop Down 1</a></li>\n\t\t                  <li><a href=\"#\">Deep Drop Down 2</a></li>\n\t\t                  <li><a href=\"#\">Deep Drop Down 3</a></li>\n\t\t                  <li><a href=\"#\">Deep Drop Down 4</a></li>\n\t\t                  <li><a href=\"#\">Deep Drop Down 5</a></li>\n\t\t                </ul>\n\t\t              </li>\n\t\t              <li><a href=\"#\">Drop Down 2</a></li>\n\t\t              <li><a href=\"#\">Drop Down 3</a></li>\n\t\t              <li><a href=\"#\">Drop Down 4</a></li>\n\t\t            </ul>\n\t\t          </li>\n\t\t          <li><a href=\"#contact\">Contact</a></li>\n\n\t\t        </ul>\n\t\t      </nav>\n\n\t\t      <a href=\"#about\" className=\"get-started-btn scrollto\">Get Started</a>\n\n\t\t    </div>\n\t\t  </header>\n    \t);\n  }\n}\n\nexport default Navbar;","import React from 'react';\nimport sideImage from '../../assets/img/hero-img.png'\n\nclass Home extends React.Component {\n  render() {\n    return (\n            <section id=\"hero\" className=\"d-flex align-items-center\">\n                    <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-6 d-flex flex-column justify-content-center pt-4 pt-lg-0 order-2 order-lg-1 aos-init aos-animate\" data-aos=\"fade-up\" data-aos-delay=\"200\">\n                    <h1>Better Solutions For Your Business</h1>\n                    <h2>We are team of talanted designers making websites with Bootstrap</h2>\n                    <div className=\"d-lg-flex\">\n                        <a href=\"#about\" className=\"btn-get-started scrollto\">Get Started</a>\n                        <a href=\"https://www.youtube.com/watch?v=jDDaplaOz7Q\" className=\"venobox btn-watch-video vbox-item\" data-vbtype=\"video\" data-autoplay=\"true\"> Watch Video <i className=\"icofont-play-alt-2\"></i></a>\n                    </div>\n                    </div>\n                    <div className=\"col-lg-6 order-1 order-lg-2 hero-img aos-init aos-animate\" data-aos=\"zoom-in\" data-aos-delay=\"200\">\n                    <img src={sideImage} className=\"img-fluid animated\" alt=\"\" />\n                    </div>\n                </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport './assets/vendor/bootstrap/css/bootstrap-grid.css'\nimport './assets/css/style.css'\n\nimport Navbar from './Components/header'\nimport Home from './Components/pages/home'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}